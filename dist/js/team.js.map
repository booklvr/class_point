{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/commonFunctions.js","webpack:///./src/js/team/UI.js","webpack:///./src/js/team/controller.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gDAAgD,UAAU,8BAA8B,iBAAiB;AACzG;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gDAAgD,aAAa,8BAA8B,eAAe;AAC1G;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,CAAC;;AAE0B;AAC3B;;;;;;;;;;;;;ACpYA;AAAA;AAAA;AAA8D;;AAE9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,K;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,6CAA6C,KAAK;AAClD;AACA,gCAAgC,EAAE;AAClC;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D,YAAY;;AAExE;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;;;AAIT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET,qC;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,wDAAwD,uCAAuC;AAC/F,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC,EAAE,mEAAE;;AAEc;;;;;;;;;;;;;;;;;ACnUnB;AAAA;AAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC,EAAE,iDAAE;;AAEL","file":"js/team.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/team/controller.js\");\n","var commonFunctions = (function () {\r\n  var DOMStrings = {\r\n    // ID's\r\n    numberOfTeams: \"#numberOfTeams\",\r\n\r\n    // CLASSES\r\n    submit: \".submit\",\r\n    gameContainer: \".game__container\",\r\n    // classroomData: '.classroomData',\r\n    teams: \".teams\",\r\n    previewTeams: \".preview__teams\",\r\n    gameForm: \".gameForm\",\r\n    errors: \".errors\",\r\n    titleContainer: \".title__container\",\r\n    title: \".title\",\r\n    refreshStudentsBtn: \".refresh-studentsBtn\",\r\n    refreshGameBtn: \".refresh-gameBtn\",\r\n    playGameBtn: \".playGameBtn\",\r\n    shuffleStudentsBtn: \".shuffle-studentsBtn\",\r\n    saveGameBtn: \".save-gameBtn\", // not yet\r\n    goToClassroomBtn: \".goToClassroomBtn\",\r\n    playAgainBtn: \".playAgainBtn\",\r\n    previous: \".previous\",\r\n    previousStudent: \".previous-student\",\r\n    nextStudent: \".next-student\",\r\n    next: \".next\",\r\n    options: \".options\",\r\n  };\r\n\r\n  var DOM = {\r\n    numberOfTeams: document.querySelector(DOMStrings.numberOfTeams),\r\n    submit: document.querySelector(DOMStrings.submit),\r\n    gameForm: document.querySelector(DOMStrings.gameForm),\r\n    gameContainer: document.querySelector(DOMStrings.gameContainer),\r\n    errors: document.querySelector(DOMStrings.errors),\r\n    // classroomData: document.querySelector(DOMStrings.classroomData),\r\n    teams: document.querySelector(DOMStrings.teams),\r\n    previewTeams: document.querySelector(DOMStrings.previewTeams),\r\n    titleContainer: document.querySelector(DOMStrings.titleContainer),\r\n    title: document.querySelector(DOMStrings.title),\r\n    refreshStudentsBtn: document.querySelector(DOMStrings.refreshStudentsBtn),\r\n    shuffleStudentsBtn: document.querySelector(DOMStrings.shuffleStudentsBtn),\r\n    playGameBtn: document.querySelector(DOMStrings.playGameBtn),\r\n    refreshGameBtn: document.querySelector(DOMStrings.refreshGameBtn),\r\n    saveGameBtn: document.querySelector(DOMStrings.saveGameBtn),\r\n    goToClassroomBtn: document.querySelector(DOMStrings.goToClassroomBtn),\r\n    playAgainBtn: document.querySelector(DOMStrings.playAgainBtn),\r\n    next: document.querySelector(DOMStrings.next),\r\n    nextStudent: document.querySelector(DOMStrings.nextStudent),\r\n    previousStudent: document.querySelector(DOMStrings.previousStudent),\r\n    previous: document.querySelector(DOMStrings.previous),\r\n  };\r\n\r\n  //is it an add or minus button;\r\n  return {\r\n    plusOrMinus: function (target) {\r\n      return target.classList.contains(\"add\") ? 1 : -1;\r\n    },\r\n\r\n    addPreviewToDOM: function (teamsArray) {\r\n      DOM.previewTeams.innerHTML = \"\";\r\n\r\n      teamsArray.forEach((team) => {\r\n        //create new team div\r\n        const newTeam = document.createElement(\"div\");\r\n        newTeam.className += \"team\";\r\n\r\n        //add title\r\n        const teamName = document.createElement(\"h3\");\r\n        teamName.className += \"teamName\";\r\n        teamName.innerHTML = team.name;\r\n        newTeam.appendChild(teamName);\r\n        let teamList = document.createElement(\"ul\");\r\n        teamList.className += \"teamList\";\r\n        team.students.forEach((student) => {\r\n          let newStudent = document.createElement(\"li\");\r\n          newStudent.className += \"student\";\r\n          newStudent.innerHTML = `\r\n                        <span class=\"student-name\">${student.name}</span>\r\n                        <span class=\"student-gender\">${\r\n                          student.sex === \"male\" ? \"boy\" : \"girl\"\r\n                        }</span>\r\n                        <i id=\"${\r\n                          student._id\r\n                        }\" class=\"deleteStudent fas fa-minus\"></i></a>\r\n                    `;\r\n          teamList.appendChild(newStudent);\r\n        });\r\n        newTeam.appendChild(teamList);\r\n        // const teamName = document.createElement('ul')\r\n        DOM.previewTeams.appendChild(newTeam);\r\n      });\r\n    },\r\n    removeStudentFromTeam: function (teamsArray, studentID) {\r\n      teamsArray.forEach(\r\n        (team) =>\r\n          (team.students = team.students.filter(\r\n            (student) => student._id !== studentID\r\n          ))\r\n      );\r\n\r\n      console.log(\"teamsArray\", teamsArray);\r\n    },\r\n    removeStudentfromArray: function (studentsArray, studentID) {\r\n      // console.log(studentID);\r\n\r\n      studentsArray = studentsArray.filter(\r\n        (student) => student._id != studentID\r\n      );\r\n\r\n      console.log(studentsArray);\r\n\r\n      return studentsArray;\r\n    },\r\n    shuffleArray: function (array) {\r\n      var currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n      // While there remain elements to shuffle...\r\n      while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n      }\r\n\r\n      return array;\r\n    },\r\n\r\n    addErrorMessage: function (message) {\r\n      DOM.errors.innerHTML = message;\r\n\r\n      setTimeout(() => {\r\n        DOM.errors.innerHTML = \"\";\r\n      }, 3000);\r\n    },\r\n\r\n    startGame: function () {\r\n      DOM.title.innerHTML = \"Let's Play\";\r\n      if (DOM.gameForm) {\r\n        DOM.gameForm.remove();\r\n      }\r\n\r\n      DOM.previewTeams.remove();\r\n      DOM.teams.innerHTML = \"\";\r\n      DOM.refreshStudentsBtn.remove();\r\n      DOM.shuffleStudentsBtn.remove();\r\n      DOM.playGameBtn.remove();\r\n      DOM.refreshGameBtn.classList.toggle(\"hide\");\r\n      DOM.saveGameBtn.classList.toggle(\"hide\");\r\n      DOM.previous.classList.toggle(\"hide\");\r\n      DOM.nextStudent.classList.toggle(\"hide\");\r\n      DOM.previousStudent.classList.toggle(\"hide\");\r\n      DOM.next.classList.toggle(\"hide\");\r\n      DOM.teams.classList.toggle(\"hide\");\r\n    },\r\n\r\n    addTeamsToDom: function (teamsArray) {\r\n      // add teams to the dom\r\n\r\n      teamsArray.forEach((team, teamIndex) => {\r\n        //create new team div\r\n        const newTeam = document.createElement(\"div\");\r\n        newTeam.className += \"team\";\r\n\r\n        newTeam.setAttribute(\"id\", team.teamID);\r\n        //add title\r\n\r\n        const teamInfo = document.createElement(\"div\");\r\n        teamInfo.className += \"team-info\";\r\n\r\n        const teamName = document.createElement(\"h3\");\r\n        teamName.className += \"teamName\";\r\n        teamName.innerHTML = team.name;\r\n\r\n        teamInfo.appendChild(teamName);\r\n        let teamPoint = document.createElement(\"div\");\r\n        teamPoint.className += \"teamPoint\";\r\n        teamPoint.innerHTML = `\r\n                    <button class=\"minus minus__team\"><i class=\"fas fa-minus\"></i></button>\r\n                    <button class=\"add add__team\"><i class=\"fas fa-plus\"></i></button>\r\n                    <span class=\"teamPointValue\">${team.totalPoints}</span>\r\n                `;\r\n\r\n        teamInfo.appendChild(teamPoint);\r\n        newTeam.appendChild(teamInfo);\r\n\r\n        let teamList = document.createElement(\"ul\");\r\n        teamList.className += \"teamList\";\r\n        team.students.forEach((student, studentIndex) => {\r\n          let newStudent = document.createElement(\"li\");\r\n          newStudent.className += \"student\";\r\n          newStudent.setAttribute(\"id\", student._id);\r\n          newStudent.innerHTML = `\r\n                        <span class=name>${student.name}</span>\r\n                        <button class=\"add-plus-btn minus minus__student\"><i class=\"fas fa-minus\"></i></button>\r\n                        <button class=\"add-plus-btn add add__student\"><i class=\"fas fa-plus\"></i></button>\r\n                        <span class=\"points\">${student.points}</span>\r\n                    `;\r\n          teamList.appendChild(newStudent);\r\n          // create current student\r\n          if (teamIndex === 0 && studentIndex === 0) {\r\n            newStudent.className += \" currentStudent\";\r\n            // create next student\r\n          } else if (teamIndex === 1 && studentIndex === 0) {\r\n            newStudent.className += \" nextStudent\";\r\n          }\r\n        });\r\n\r\n        newTeam.appendChild(teamList);\r\n\r\n        // const teamName = document.createElement('ul')\r\n        DOM.teams.appendChild(newTeam);\r\n      });\r\n    },\r\n\r\n    updateStudentPointDom: function (target, action) {\r\n      //find pointsDiv\r\n      const pointsDiv = target.parentElement.lastElementChild;\r\n      //update pointsDiv\r\n      pointsDiv.innerHTML = +pointsDiv.innerHTML + action;\r\n    },\r\n    updatePointsArrayAll: function (teamsArray, student, action) {\r\n      console.log(student.parentElement.parentElement);\r\n\r\n      const studentID = student.id;\r\n\r\n      teamsArray.forEach((team) =>\r\n        team.students.map((student) => {\r\n          if (student._id === studentID) {\r\n            console.log(\"it's a match\");\r\n            // add or minus points from student points\r\n            student.points += action;\r\n            team.totalPoints += action;\r\n          }\r\n        })\r\n      );\r\n      console.log(teamsArray);\r\n    },\r\n    updatePointsArrayTeam: function (teamsArray, teamID, action) {\r\n      // iterate over teams array\r\n      // add or minus point to teamPoints\r\n\r\n      teamsArray.forEach((team) => {\r\n        console.log(\"team.teamID\", team.teamID);\r\n        console.log(\"teamID\", teamID);\r\n        if (team.teamID === teamID) {\r\n          console.log(\"its a match :) \");\r\n          team.totalPoints += action;\r\n        }\r\n      });\r\n      console.log(teamsArray);\r\n    },\r\n\r\n    updateTeamPointDom: function (team, action) {\r\n      const pointValue = team.querySelector(\".teamPointValue\");\r\n\r\n      action === 1\r\n        ? (pointValue.innerHTML = +pointValue.innerHTML + 1)\r\n        : (pointValue.innerHTML = +pointValue.innerHTML - 1);\r\n    },\r\n\r\n    clearDOM: function () {\r\n      DOM.teams.innerHTML = \"\";\r\n      // DOM.gameContainer.firstChild.remove();\r\n    },\r\n\r\n    shiftTeamsAndStudentArray: function (array) {\r\n      console.log(\"shift array\");\r\n      console.log(array);\r\n      array[0].students.push(array[0].students.shift());\r\n      console.log(array);\r\n      array.push(array.shift());\r\n      console.log(array);\r\n    },\r\n\r\n    unShiftTeamsAndStudentArray: function (array) {\r\n      console.log(\"unshift array\");\r\n      array.unshift(array.pop());\r\n      array[0].students.unshift(array[0].students.pop());\r\n    },\r\n\r\n    unShiftStudentsArray: function (array) {\r\n      console.log(\"unShift array\");\r\n      array.unshift(array.pop());\r\n    },\r\n\r\n    shiftStudentsArray: function (array) {\r\n      console.log(\"shift array\");\r\n      array.push(array.shift());\r\n    },\r\n\r\n    deleteScores: function (teamsArray) {\r\n      teamsArray.forEach((team) => {\r\n        team.totalPoints = 0;\r\n        team.students.forEach((student) => {\r\n          student.points = 0;\r\n        });\r\n      });\r\n      console.log(teamsArray);\r\n    },\r\n\r\n    clearInput: function () {\r\n      DOM.numberOfTeams.value = 1;\r\n    },\r\n\r\n    endGameOptions: function () {\r\n      DOM.teams.innerHTML = \"\";\r\n      DOM.refreshGameBtn.remove();\r\n      DOM.saveGameBtn.remove();\r\n      DOM.previous.remove();\r\n      DOM.previousStudent.remove();\r\n      DOM.nextStudent.remove();\r\n      DOM.next.remove();\r\n\r\n      DOM.goToClassroomBtn.classList.toggle(\"hide\");\r\n      DOM.playAgainBtn.classList.toggle(\"hide\");\r\n    },\r\n\r\n    addWinningTeam: function (array) {\r\n      console.log(array);\r\n      const winningTeamScore = Math.max.apply(\r\n        Math,\r\n        array.map((o) => o.totalPoints)\r\n      );\r\n      const winningTeams = array.filter(\r\n        (o) => o.totalPoints == winningTeamScore\r\n      );\r\n      console.log(winningTeams);\r\n\r\n      const winningTeamContainer = document.createElement(\"div\");\r\n\r\n      winningTeamContainer.classList += \"winningStudentContainer\";\r\n      winningTeamContainer.innerHTML = `\r\n                <h3 class=\"winningStudentTitle\">${\r\n                  winningTeams.length === 1\r\n                    ? \"First Place Team\"\r\n                    : \"Tied for First\"\r\n                }</h3> \r\n            `;\r\n      winningTeams.forEach((team) => {\r\n        winningTeamContainer.innerHTML += `\r\n                    <div class=\"firstPlace\">\r\n                        <p class=\"winnerName\">${team.name} <span class=\"winnerPoints\">${team.totalPoints}</span></p>\r\n                    </div>\r\n                `;\r\n      });\r\n      DOM.teams.appendChild(winningTeamContainer);\r\n    },\r\n\r\n    addWinningStudent: function (array) {\r\n      const winningStudentScore = Math.max.apply(\r\n        Math,\r\n        array.map((o) => o.points)\r\n      );\r\n      const winningStudents = array.filter(\r\n        (o) => o.points == winningStudentScore\r\n      );\r\n      console.log(winningStudents);\r\n\r\n      const winningStudentContainer = document.createElement(\"div\");\r\n\r\n      winningStudentContainer.classList += \"winningStudentContainer\";\r\n      winningStudentContainer.innerHTML = `\r\n                <h3 class=\"winningStudentTitle\">${\r\n                  winningStudents.length === 1\r\n                    ? \"First Place Student\"\r\n                    : \"Tied for First\"\r\n                }</h3> \r\n            `;\r\n      winningStudents.forEach((student) => {\r\n        winningStudentContainer.innerHTML += `\r\n                    <div class=\"firstPlace\">\r\n                        <p class=\"winnerName\">${student.name} <span class=\"winnerPoints\">${student.points}</span></p>\r\n                    </div>\r\n                `;\r\n      });\r\n      DOM.teams.appendChild(winningStudentContainer);\r\n    },\r\n  };\r\n})();\r\n\r\nexport { commonFunctions };\r\n// export default commonFunctions;\r\n","import { commonFunctions as CF } from '../commonFunctions.js';\r\n\r\nvar gameFormUI = (function(CF) {\r\n    var DOMStrings = {\r\n        // ID's\r\n        numberOfTeams: '#numberOfTeams',\r\n        \r\n        // CLASSES\r\n        gameContainer: '.game__container',\r\n        classroomData: '.classroomData',\r\n        teams: '.teams',\r\n        previewTeams: '.preview__teams',\r\n        titleContainer: '.title__container',\r\n        refreshStudentsBtn: '.refresh-studentsBtn',\r\n        refreshGameBtn: '.refresh-gameBtn',\r\n        shuffleStudentsBtn: '.shuffle-studentsBtn',\r\n        saveGameBtn: '.save-gameBtn', \r\n        goToClassroomBtn: '.goToClassroomBtn',\r\n        playAgainBtn: '.playAgainBtn',\r\n        playGameBtn: '.playGameBtn',\r\n        previous: '.previous',\r\n        previousStudent: '.previous-student',\r\n        nextStudent: '.next-student',\r\n        next: '.next',\r\n        increment: '.increment',\r\n        decrement: '.decrement',\r\n        title2: '.title-2',\r\n        gameFormContainer: '.game__form__container',\r\n    };\r\n\r\n    var DOM = {\r\n        classroomData: document.querySelector(DOMStrings.classroomData),\r\n        title2: document.querySelector(DOMStrings.title2),\r\n        gameFormContainer: document.querySelector(DOMStrings.gameFormContainer),\r\n        numberOfTeams: document.querySelector(DOMStrings.numberOfTeams)\r\n    } \r\n    // CREATE STUDENTS AND TEAMS ARRAY\r\n    let studentsArray = [];\r\n    let teamsArray = [];\r\n    let backupArray = [];\r\n    \r\n    ////////////////////////////////////////////////////////////////////////////\r\n    // HELPER FUNCTIONS UNIQUE TO TEAM GAME\r\n\r\n    ////////////////////////////////////////////////////////////////////////////\r\n    // *** Functions for Game Form ***\r\n    const tooManyTeams = function (teamSize) {\r\n        console.log(studentsArray.length);\r\n        console.log((( studentsArray.length + 1 ) / teamSize) < 2)\r\n        if ((( studentsArray.length + 1 ) / teamSize) < 2) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const createTeams = function (teamNumber) {\r\n        console.log('creatingTeams');\r\n        // clear array\r\n        teamsArray = [];\r\n        \r\n        // instantiate variables\r\n        var i,j,k,temp, chunk;\r\n\r\n        // find chunk size\r\n        chunk = studentsArray.length / teamNumber;\r\n\r\n        for (i=0,j=studentsArray.length, k=1; i<j; i+=chunk, k++) {\r\n            const team = {}\r\n            team.name = `Team ${k}`\r\n            team.totalPoints = 0;\r\n            team.teamID = `team${k}`;\r\n            temp = studentsArray.slice(i,i+chunk);\r\n            console.log('temp', temp);\r\n            team.students = temp;\r\n            teamsArray.push(team);\r\n        }\r\n        console.log(teamsArray);\r\n    }\r\n\r\n    // ********************************************************* \r\n    // *** Functions for Game Play ***\r\n    // * check common functions \r\n\r\n    return {\r\n        getDOMStrings: function() {\r\n            // send domstrings to controller\r\n            return DOMStrings;\r\n        },\r\n\r\n        // FUNCTIONS\r\n        // * GET CLASSROOM DATA\r\n        // * get the classroom data from the backend \r\n        // * ID used as search parameter stored on main dataset in html\r\n        // * shuffle the returned data for unique gamepaly\r\n        getClassroomData: async function () {\r\n            const classroomID = DOM.classroomData.dataset.classroom_id;\r\n\r\n            const response = await fetch(`/game/classData/${classroomID}`)\r\n            \r\n            const students = await response.json();\r\n\r\n            students.forEach(student => studentsArray.push(student));\r\n\r\n            // backup students array for refresh\r\n            backupArray = studentsArray;\r\n        },\r\n\r\n        // *************************************\r\n        // * CREATE PREVIEW DOM\r\n        // * check that the user doesn't request too many games for student number\r\n        // * create teams to preview\r\n        // * add those teams to the dom\r\n        createPreviewDOM: function (teamSize) {\r\n            \r\n            if (tooManyTeams(teamSize)) {\r\n                console.log('Too many teams, not enough students');\r\n                return CF.addErrorMessage('There are not enough students for that many teams');\r\n            }\r\n\r\n            createTeams(teamSize);\r\n            CF.addPreviewToDOM(teamsArray);\r\n        },\r\n\r\n        // *************************************\r\n        // * DELETE STUDENT\r\n        // * delete the student from the dom as well as the students array\r\n        // * purpose is to delete abesent students\r\n        deleteStudent: function (e) {\r\n            if (e.target.classList.contains('deleteStudent')) {\r\n                \r\n                CF.removeStudentFromTeam(teamsArray, e.target.id);\r\n                studentsArray = CF.removeStudentfromArray(studentsArray, e.target.id)\r\n                //remove the student form the DOM\r\n                let li = e.target.parentElement;\r\n                li.remove();\r\n            }\r\n        },\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////\r\n        // *** Functions for Game Play ***\r\n        \r\n\r\n        // *************************************\r\n        // * START THE GAME\r\n        // * clear the preview from the dom\r\n        // * add tems to the dom for game play \r\n        startGame: function (e) {\r\n            // posting teams to teamGame\r\n            e.preventDefault();\r\n\r\n            CF.startGame();\r\n\r\n            DOM.title2.classList.toggle('hide');\r\n            DOM.gameFormContainer.remove();\r\n            \r\n            CF.addTeamsToDom(teamsArray);\r\n        },\r\n        \r\n        // *************************************\r\n        // * CHANGE THE STUDENTS POINTS\r\n        // * Change the studnets points in dom\r\n        // * change the team points in dom\r\n        // * change the students points and team points in teams array\r\n        changePointStudent: function(e) {\r\n            const target = e.target.parentElement;\r\n            \r\n            if (target.classList.contains('add__student') || target.classList.contains('minus__student')) {\r\n                const action = CF.plusOrMinus(target);\r\n                const student = target.parentElement;\r\n                const team = student.parentElement.parentElement;\r\n                \r\n                console.log(action);\r\n\r\n                CF.updateStudentPointDom(target, action);\r\n\r\n                CF.updatePointsArrayAll(teamsArray, student, action);\r\n\r\n                CF.updateTeamPointDom(team, action);\r\n            }\r\n        },\r\n        \r\n        // *************************************\r\n        // * CHANGE TEAM POINTS\r\n        // * change team points in DOM\r\n        // * cange team points in teams points array\r\n        changeTeamPoints: function(e) {\r\n            console.log('change team points')\r\n\r\n            const target = e.target.parentElement;\r\n            const pointDiv = target.parentElement;\r\n            \r\n            if (pointDiv.classList.contains('teamPoint')) {\r\n                const team = pointDiv.parentElement.parentElement;\r\n\r\n                let action = CF.plusOrMinus(target);\r\n\r\n                CF.updatePointsArrayTeam(teamsArray, team.id, action)\r\n\r\n                //update DOM \r\n                CF.updateTeamPointDom(team, action);\r\n            }\r\n        },\r\n\r\n        \r\n\r\n        goToPrevious: function() {\r\n            console.log('gotoprevious')\r\n\r\n            CF.clearDOM();\r\n                \r\n            // shift arrays \r\n            CF.unShiftTeamsAndStudentArray(teamsArray);\r\n            \r\n            CF.addTeamsToDom(teamsArray);\r\n        },\r\n\r\n        goToPreviousStudent: function() {\r\n            console.log('goToPreviousStudent')\r\n\r\n            CF.clearDOM();\r\n            CF.unShiftStudentsArray(teamsArray[0].students);\r\n            CF.addTeamsToDom(teamsArray);\r\n        },\r\n\r\n        goToNextStudent: function() {                \r\n            CF.clearDOM();\r\n            CF.shiftStudentsArray(teamsArray[0].students);\r\n            CF.addTeamsToDom(teamsArray);\r\n        },\r\n\r\n        // *************************************\r\n        // * GO TO THE NEXT TEAMS TURN\r\n        goToNext: function() {\r\n            \r\n                CF.clearDOM();\r\n                CF.shiftTeamsAndStudentArray(teamsArray);\r\n                CF.addTeamsToDom(teamsArray);\r\n        },\r\n\r\n        // *************************************\r\n        // * START A NEW GAME\r\n        refreshScores: function() {\r\n            CF.deleteScores(teamsArray);\r\n            CF.clearDOM();\r\n            CF.addTeamsToDom(teamsArray);\r\n        },\r\n        refreshStudents: function() {\r\n            console.log('refreshStudents');\r\n            \r\n            CF.clearInput();\r\n            studentsArray = backupArray;\r\n            createTeams(1);\r\n            CF.addPreviewToDOM(teamsArray);\r\n        },\r\n        shufflePreview: function () {\r\n            console.log('shuffle these students around');\r\n            CF.shuffleArray(studentsArray);\r\n\r\n            const teamsSize = DOM.numberOfTeams.value;\r\n            createTeams(teamsSize);\r\n            console.log('teamsSize', teamsSize)\r\n            console.log('shuffle preview and create teams function')\r\n            CF.addPreviewToDOM(teamsArray);\r\n        },\r\n        saveGame: async function () {\r\n\r\n\r\n            CF.clearDOM();\r\n            CF.endGameOptions();\r\n\r\n            CF.addWinningTeam(teamsArray);\r\n\r\n            CF.addWinningStudent(studentsArray);\r\n\r\n\r\n            const url = \"/game/updatePoints\";\r\n             \r\n            await fetch(url, {\r\n                method: 'post',\r\n                \r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                // credentials: 'same-origin',\r\n                body: JSON.stringify(studentsArray),\r\n            }).then(res => res)\r\n            .then(text => console.log('final result', text))\r\n        },\r\n        playAgain: function() {\r\n            window.location.reload(false);\r\n        },\r\n        goToClassroom: function () {\r\n             window.location.href = `/classroom/class/${DOM.classroomData.dataset.classroom_id}`;\r\n        },\r\n        increment: function () {\r\n            this.parentNode.parentNode.querySelector('.team_number').stepUp();\r\n\r\n            const teamSize = this.parentNode.parentNode.querySelector('.team_number').value;\r\n            if (tooManyTeams(teamSize)) {\r\n                console.log('Too many teams, not enough students');\r\n                return CF.addErrorMessage('There are not enough students for that many teams');\r\n            }\r\n\r\n            createTeams(teamSize);\r\n            CF.addPreviewToDOM(teamsArray);\r\n\r\n        },\r\n        decrement: function () {\r\n            this.parentNode.parentNode.querySelector('.team_number').stepDown();\r\n\r\n            const teamSize = this.parentNode.parentNode.querySelector('.team_number').value;\r\n            if (tooManyTeams(teamSize)) {\r\n                console.log('Too many teams, not enough students');\r\n                return CF.addErrorMessage('There are not enough students for that many teams');\r\n            }\r\n\r\n            createTeams(teamSize);\r\n            CF.addPreviewToDOM(teamsArray);\r\n\r\n        }\r\n    };\r\n})(CF);\r\n\r\nexport{gameFormUI};\r\n\r\n\r\n\r\n\r\n","import { gameFormUI as UI } from './UI.js';\r\n\r\nvar controller = (function(UI) {\r\n    var setupEventListeners = function() {\r\n        console.log('setup event listeners')\r\n        var DOMStrings = UI.getDOMStrings();\r\n\r\n        var DOM = {\r\n            gameContainer: document.querySelector(DOMStrings.gameContainer),\r\n            numberOfTeams: document.querySelector(DOMStrings.numberOfTeams),\r\n            gameFormClassroomData: document.querySelector(DOMStrings.gameFormClassroomData),\r\n            previewTeams: document.querySelector(DOMStrings.previewTeams),\r\n            teams: document.querySelector(DOMStrings.teams),\r\n            titleContainer: document.querySelector(DOMStrings.titleContainer),\r\n            refreshStudentsBtn: document.querySelector(DOMStrings.refreshStudentsBtn),\r\n            shuffleStudentsBtn: document.querySelector(DOMStrings.shuffleStudentsBtn),\r\n            playGameBtn: document.querySelector(DOMStrings.playGameBtn),\r\n            refreshGameBtn: document.querySelector(DOMStrings.refreshGameBtn),\r\n            saveGameBtn: document.querySelector(DOMStrings.saveGameBtn),\r\n            goToClassroomBtn: document.querySelector(DOMStrings.goToClassroomBtn),\r\n            playAgainBtn: document.querySelector(DOMStrings.playAgainBtn),\r\n            next: document.querySelector(DOMStrings.next),\r\n            nextStudent: document.querySelector(DOMStrings.nextStudent),\r\n            previousStudent: document.querySelector(DOMStrings.previousStudent),\r\n            previous: document.querySelector(DOMStrings.previous),\r\n            increment: document.querySelector(DOMStrings.increment),\r\n            decrement: document.querySelector(DOMStrings.decrement),\r\n        };\r\n        \r\n\r\n        //EVENT LISTENERS\r\n        // create teams on change of number input\r\n        DOM.numberOfTeams.addEventListener('change', (e) => {\r\n            UI.createPreviewDOM(e.target.value);\r\n        });\r\n\r\n        DOM.previewTeams.addEventListener('click', UI.deleteStudent);\r\n        DOM.teams.addEventListener('click', UI.changePointStudent);\r\n        DOM.teams.addEventListener('click', UI.changeTeamPoints);\r\n        DOM.refreshGameBtn.addEventListener('click', UI.refreshScores);\r\n        DOM.refreshStudentsBtn.addEventListener('click', UI.refreshStudents);\r\n        DOM.playGameBtn.addEventListener('click', UI.startGame);\r\n        DOM.shuffleStudentsBtn.addEventListener('click', UI.shufflePreview);\r\n        DOM.saveGameBtn.addEventListener('click', UI.saveGame);\r\n        DOM.goToClassroomBtn.addEventListener('click', UI.goToClassroom);\r\n        DOM.playAgainBtn.addEventListener('click', UI.playAgain);\r\n        DOM.playAgainBtn.addEventListener('click', UI.playAgain);\r\n        DOM.previous.addEventListener('click', UI.goToPrevious);\r\n        DOM.previousStudent.addEventListener('click', UI.goToPreviousStudent);\r\n        DOM.nextStudent.addEventListener('click', UI.goToNextStudent);\r\n        DOM.next.addEventListener('click', UI.goToNext);\r\n        DOM.increment.addEventListener('click', UI.increment);\r\n        DOM.decrement.addEventListener('click', UI.decrement);\r\n    }\r\n\r\n    return {\r\n        init: async function () {\r\n            console.log('You can now create a game');\r\n            await UI.getClassroomData();\r\n            \r\n\r\n            UI.createPreviewDOM(1);\r\n            setupEventListeners();\r\n        }\r\n    }\r\n})(UI);\r\n\r\ncontroller.init();\r\n\r\n"],"sourceRoot":""}