{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/commonFunctions.js","webpack:///./src/js/participation/UI.js","webpack:///./src/js/participation/controller.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gDAAgD,UAAU,8BAA8B,iBAAiB;AACzG;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gDAAgD,aAAa,8BAA8B,eAAe;AAC1G;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,CAAC;;AAE0B;AAC3B;;;;;;;;;;;;;ACpYA;AAAA;AAAA;AAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D,+CAA+C,wCAAwC;AACvF,yBAAyB,YAAY;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA,gE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,4DAA4D,YAAY;;AAExE;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;;;;;AAMT;AACA;AACA;AACA;;;AAGA,gCAAgC,mEAAE;;;AAGlC;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;AAGA,YAAY,mEAAE;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,+BAA+B,mEAAE;AACjC;;AAEA,gBAAgB,mEAAE;;AAElB;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,gBAAgB,mEAAE;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB,mEAAE;AAClB;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,2CAA2C;AAC3C,YAAY,mEAAE;AACd;AACA,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA,SAAS;;;AAGT;AACA;AACA,YAAY,mEAAE;;;AAGd;AACA,SAAS;;AAET;AACA,YAAY,mEAAE;AACd,YAAY,mEAAE;;AAEd,YAAY,mEAAE;;AAEd;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,wDAAwD,uCAAuC;AAC/F;AACA;AACA,CAAC,EAAE,mEAAE;;AAEmB;;;;;;;;;;;;;;;;;;;ACvSxB;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iC;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,CAAC,EAAE,sDAAE;;AAEL,kB","file":"js/participation.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/participation/controller.js\");\n","var commonFunctions = (function () {\r\n  var DOMStrings = {\r\n    // ID's\r\n    numberOfTeams: \"#numberOfTeams\",\r\n\r\n    // CLASSES\r\n    submit: \".submit\",\r\n    gameContainer: \".game__container\",\r\n    // classroomData: '.classroomData',\r\n    teams: \".teams\",\r\n    previewTeams: \".preview__teams\",\r\n    gameForm: \".gameForm\",\r\n    errors: \".errors\",\r\n    titleContainer: \".title__container\",\r\n    title: \".title\",\r\n    refreshStudentsBtn: \".refresh-studentsBtn\",\r\n    refreshGameBtn: \".refresh-gameBtn\",\r\n    playGameBtn: \".playGameBtn\",\r\n    shuffleStudentsBtn: \".shuffle-studentsBtn\",\r\n    saveGameBtn: \".save-gameBtn\", // not yet\r\n    goToClassroomBtn: \".goToClassroomBtn\",\r\n    playAgainBtn: \".playAgainBtn\",\r\n    previous: \".previous\",\r\n    previousStudent: \".previous-student\",\r\n    nextStudent: \".next-student\",\r\n    next: \".next\",\r\n    options: \".options\",\r\n  };\r\n\r\n  var DOM = {\r\n    numberOfTeams: document.querySelector(DOMStrings.numberOfTeams),\r\n    submit: document.querySelector(DOMStrings.submit),\r\n    gameForm: document.querySelector(DOMStrings.gameForm),\r\n    gameContainer: document.querySelector(DOMStrings.gameContainer),\r\n    errors: document.querySelector(DOMStrings.errors),\r\n    // classroomData: document.querySelector(DOMStrings.classroomData),\r\n    teams: document.querySelector(DOMStrings.teams),\r\n    previewTeams: document.querySelector(DOMStrings.previewTeams),\r\n    titleContainer: document.querySelector(DOMStrings.titleContainer),\r\n    title: document.querySelector(DOMStrings.title),\r\n    refreshStudentsBtn: document.querySelector(DOMStrings.refreshStudentsBtn),\r\n    shuffleStudentsBtn: document.querySelector(DOMStrings.shuffleStudentsBtn),\r\n    playGameBtn: document.querySelector(DOMStrings.playGameBtn),\r\n    refreshGameBtn: document.querySelector(DOMStrings.refreshGameBtn),\r\n    saveGameBtn: document.querySelector(DOMStrings.saveGameBtn),\r\n    goToClassroomBtn: document.querySelector(DOMStrings.goToClassroomBtn),\r\n    playAgainBtn: document.querySelector(DOMStrings.playAgainBtn),\r\n    next: document.querySelector(DOMStrings.next),\r\n    nextStudent: document.querySelector(DOMStrings.nextStudent),\r\n    previousStudent: document.querySelector(DOMStrings.previousStudent),\r\n    previous: document.querySelector(DOMStrings.previous),\r\n  };\r\n\r\n  //is it an add or minus button;\r\n  return {\r\n    plusOrMinus: function (target) {\r\n      return target.classList.contains(\"add\") ? 1 : -1;\r\n    },\r\n\r\n    addPreviewToDOM: function (teamsArray) {\r\n      DOM.previewTeams.innerHTML = \"\";\r\n\r\n      teamsArray.forEach((team) => {\r\n        //create new team div\r\n        const newTeam = document.createElement(\"div\");\r\n        newTeam.className += \"team\";\r\n\r\n        //add title\r\n        const teamName = document.createElement(\"h3\");\r\n        teamName.className += \"teamName\";\r\n        teamName.innerHTML = team.name;\r\n        newTeam.appendChild(teamName);\r\n        let teamList = document.createElement(\"ul\");\r\n        teamList.className += \"teamList\";\r\n        team.students.forEach((student) => {\r\n          let newStudent = document.createElement(\"li\");\r\n          newStudent.className += \"student\";\r\n          newStudent.innerHTML = `\r\n                        <span class=\"student-name\">${student.name}</span>\r\n                        <span class=\"student-gender\">${\r\n                          student.sex === \"male\" ? \"boy\" : \"girl\"\r\n                        }</span>\r\n                        <i id=\"${\r\n                          student._id\r\n                        }\" class=\"deleteStudent fas fa-minus\"></i></a>\r\n                    `;\r\n          teamList.appendChild(newStudent);\r\n        });\r\n        newTeam.appendChild(teamList);\r\n        // const teamName = document.createElement('ul')\r\n        DOM.previewTeams.appendChild(newTeam);\r\n      });\r\n    },\r\n    removeStudentFromTeam: function (teamsArray, studentID) {\r\n      teamsArray.forEach(\r\n        (team) =>\r\n          (team.students = team.students.filter(\r\n            (student) => student._id !== studentID\r\n          ))\r\n      );\r\n\r\n      console.log(\"teamsArray\", teamsArray);\r\n    },\r\n    removeStudentfromArray: function (studentsArray, studentID) {\r\n      // console.log(studentID);\r\n\r\n      studentsArray = studentsArray.filter(\r\n        (student) => student._id != studentID\r\n      );\r\n\r\n      console.log(studentsArray);\r\n\r\n      return studentsArray;\r\n    },\r\n    shuffleArray: function (array) {\r\n      var currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n      // While there remain elements to shuffle...\r\n      while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n      }\r\n\r\n      return array;\r\n    },\r\n\r\n    addErrorMessage: function (message) {\r\n      DOM.errors.innerHTML = message;\r\n\r\n      setTimeout(() => {\r\n        DOM.errors.innerHTML = \"\";\r\n      }, 3000);\r\n    },\r\n\r\n    startGame: function () {\r\n      DOM.title.innerHTML = \"Let's Play\";\r\n      if (DOM.gameForm) {\r\n        DOM.gameForm.remove();\r\n      }\r\n\r\n      DOM.previewTeams.remove();\r\n      DOM.teams.innerHTML = \"\";\r\n      DOM.refreshStudentsBtn.remove();\r\n      DOM.shuffleStudentsBtn.remove();\r\n      DOM.playGameBtn.remove();\r\n      DOM.refreshGameBtn.classList.toggle(\"hide\");\r\n      DOM.saveGameBtn.classList.toggle(\"hide\");\r\n      DOM.previous.classList.toggle(\"hide\");\r\n      DOM.nextStudent.classList.toggle(\"hide\");\r\n      DOM.previousStudent.classList.toggle(\"hide\");\r\n      DOM.next.classList.toggle(\"hide\");\r\n      DOM.teams.classList.toggle(\"hide\");\r\n    },\r\n\r\n    addTeamsToDom: function (teamsArray) {\r\n      // add teams to the dom\r\n\r\n      teamsArray.forEach((team, teamIndex) => {\r\n        //create new team div\r\n        const newTeam = document.createElement(\"div\");\r\n        newTeam.className += \"team\";\r\n\r\n        newTeam.setAttribute(\"id\", team.teamID);\r\n        //add title\r\n\r\n        const teamInfo = document.createElement(\"div\");\r\n        teamInfo.className += \"team-info\";\r\n\r\n        const teamName = document.createElement(\"h3\");\r\n        teamName.className += \"teamName\";\r\n        teamName.innerHTML = team.name;\r\n\r\n        teamInfo.appendChild(teamName);\r\n        let teamPoint = document.createElement(\"div\");\r\n        teamPoint.className += \"teamPoint\";\r\n        teamPoint.innerHTML = `\r\n                    <button class=\"minus minus__team\"><i class=\"fas fa-minus\"></i></button>\r\n                    <button class=\"add add__team\"><i class=\"fas fa-plus\"></i></button>\r\n                    <span class=\"teamPointValue\">${team.totalPoints}</span>\r\n                `;\r\n\r\n        teamInfo.appendChild(teamPoint);\r\n        newTeam.appendChild(teamInfo);\r\n\r\n        let teamList = document.createElement(\"ul\");\r\n        teamList.className += \"teamList\";\r\n        team.students.forEach((student, studentIndex) => {\r\n          let newStudent = document.createElement(\"li\");\r\n          newStudent.className += \"student\";\r\n          newStudent.setAttribute(\"id\", student._id);\r\n          newStudent.innerHTML = `\r\n                        <span class=name>${student.name}</span>\r\n                        <button class=\"add-plus-btn minus minus__student\"><i class=\"fas fa-minus\"></i></button>\r\n                        <button class=\"add-plus-btn add add__student\"><i class=\"fas fa-plus\"></i></button>\r\n                        <span class=\"points\">${student.points}</span>\r\n                    `;\r\n          teamList.appendChild(newStudent);\r\n          // create current student\r\n          if (teamIndex === 0 && studentIndex === 0) {\r\n            newStudent.className += \" currentStudent\";\r\n            // create next student\r\n          } else if (teamIndex === 1 && studentIndex === 0) {\r\n            newStudent.className += \" nextStudent\";\r\n          }\r\n        });\r\n\r\n        newTeam.appendChild(teamList);\r\n\r\n        // const teamName = document.createElement('ul')\r\n        DOM.teams.appendChild(newTeam);\r\n      });\r\n    },\r\n\r\n    updateStudentPointDom: function (target, action) {\r\n      //find pointsDiv\r\n      const pointsDiv = target.parentElement.lastElementChild;\r\n      //update pointsDiv\r\n      pointsDiv.innerHTML = +pointsDiv.innerHTML + action;\r\n    },\r\n    updatePointsArrayAll: function (teamsArray, student, action) {\r\n      console.log(student.parentElement.parentElement);\r\n\r\n      const studentID = student.id;\r\n\r\n      teamsArray.forEach((team) =>\r\n        team.students.map((student) => {\r\n          if (student._id === studentID) {\r\n            console.log(\"it's a match\");\r\n            // add or minus points from student points\r\n            student.points += action;\r\n            team.totalPoints += action;\r\n          }\r\n        })\r\n      );\r\n      console.log(teamsArray);\r\n    },\r\n    updatePointsArrayTeam: function (teamsArray, teamID, action) {\r\n      // iterate over teams array\r\n      // add or minus point to teamPoints\r\n\r\n      teamsArray.forEach((team) => {\r\n        console.log(\"team.teamID\", team.teamID);\r\n        console.log(\"teamID\", teamID);\r\n        if (team.teamID === teamID) {\r\n          console.log(\"its a match :) \");\r\n          team.totalPoints += action;\r\n        }\r\n      });\r\n      console.log(teamsArray);\r\n    },\r\n\r\n    updateTeamPointDom: function (team, action) {\r\n      const pointValue = team.querySelector(\".teamPointValue\");\r\n\r\n      action === 1\r\n        ? (pointValue.innerHTML = +pointValue.innerHTML + 1)\r\n        : (pointValue.innerHTML = +pointValue.innerHTML - 1);\r\n    },\r\n\r\n    clearDOM: function () {\r\n      DOM.teams.innerHTML = \"\";\r\n      // DOM.gameContainer.firstChild.remove();\r\n    },\r\n\r\n    shiftTeamsAndStudentArray: function (array) {\r\n      console.log(\"shift array\");\r\n      console.log(array);\r\n      array[0].students.push(array[0].students.shift());\r\n      console.log(array);\r\n      array.push(array.shift());\r\n      console.log(array);\r\n    },\r\n\r\n    unShiftTeamsAndStudentArray: function (array) {\r\n      console.log(\"unshift array\");\r\n      array.unshift(array.pop());\r\n      array[0].students.unshift(array[0].students.pop());\r\n    },\r\n\r\n    unShiftStudentsArray: function (array) {\r\n      console.log(\"unShift array\");\r\n      array.unshift(array.pop());\r\n    },\r\n\r\n    shiftStudentsArray: function (array) {\r\n      console.log(\"shift array\");\r\n      array.push(array.shift());\r\n    },\r\n\r\n    deleteScores: function (teamsArray) {\r\n      teamsArray.forEach((team) => {\r\n        team.totalPoints = 0;\r\n        team.students.forEach((student) => {\r\n          student.points = 0;\r\n        });\r\n      });\r\n      console.log(teamsArray);\r\n    },\r\n\r\n    clearInput: function () {\r\n      DOM.numberOfTeams.value = 1;\r\n    },\r\n\r\n    endGameOptions: function () {\r\n      DOM.teams.innerHTML = \"\";\r\n      DOM.refreshGameBtn.remove();\r\n      DOM.saveGameBtn.remove();\r\n      DOM.previous.remove();\r\n      DOM.previousStudent.remove();\r\n      DOM.nextStudent.remove();\r\n      DOM.next.remove();\r\n\r\n      DOM.goToClassroomBtn.classList.toggle(\"hide\");\r\n      DOM.playAgainBtn.classList.toggle(\"hide\");\r\n    },\r\n\r\n    addWinningTeam: function (array) {\r\n      console.log(array);\r\n      const winningTeamScore = Math.max.apply(\r\n        Math,\r\n        array.map((o) => o.totalPoints)\r\n      );\r\n      const winningTeams = array.filter(\r\n        (o) => o.totalPoints == winningTeamScore\r\n      );\r\n      console.log(winningTeams);\r\n\r\n      const winningTeamContainer = document.createElement(\"div\");\r\n\r\n      winningTeamContainer.classList += \"winningStudentContainer\";\r\n      winningTeamContainer.innerHTML = `\r\n                <h3 class=\"winningStudentTitle\">${\r\n                  winningTeams.length === 1\r\n                    ? \"First Place Team\"\r\n                    : \"Tied for First\"\r\n                }</h3> \r\n            `;\r\n      winningTeams.forEach((team) => {\r\n        winningTeamContainer.innerHTML += `\r\n                    <div class=\"firstPlace\">\r\n                        <p class=\"winnerName\">${team.name} <span class=\"winnerPoints\">${team.totalPoints}</span></p>\r\n                    </div>\r\n                `;\r\n      });\r\n      DOM.teams.appendChild(winningTeamContainer);\r\n    },\r\n\r\n    addWinningStudent: function (array) {\r\n      const winningStudentScore = Math.max.apply(\r\n        Math,\r\n        array.map((o) => o.points)\r\n      );\r\n      const winningStudents = array.filter(\r\n        (o) => o.points == winningStudentScore\r\n      );\r\n      console.log(winningStudents);\r\n\r\n      const winningStudentContainer = document.createElement(\"div\");\r\n\r\n      winningStudentContainer.classList += \"winningStudentContainer\";\r\n      winningStudentContainer.innerHTML = `\r\n                <h3 class=\"winningStudentTitle\">${\r\n                  winningStudents.length === 1\r\n                    ? \"First Place Student\"\r\n                    : \"Tied for First\"\r\n                }</h3> \r\n            `;\r\n      winningStudents.forEach((student) => {\r\n        winningStudentContainer.innerHTML += `\r\n                    <div class=\"firstPlace\">\r\n                        <p class=\"winnerName\">${student.name} <span class=\"winnerPoints\">${student.points}</span></p>\r\n                    </div>\r\n                `;\r\n      });\r\n      DOM.teams.appendChild(winningStudentContainer);\r\n    },\r\n  };\r\n})();\r\n\r\nexport { commonFunctions };\r\n// export default commonFunctions;\r\n","import { commonFunctions as CF } from '../commonFunctions.js';\r\n\r\nvar participationUI = (function() {\r\n    var DOMStrings = {\r\n        // BY CLASS\r\n        \r\n        gameContainer: '.game__container',\r\n        classroomData: '.classroomData',\r\n        teams: '.teams',  \r\n        previewTeams: '.preview__teams',\r\n        titleContainer: '.title__container',\r\n        title: '.title',\r\n        refreshStudentsBtn: '.refresh-studentsBtn',\r\n        refreshGameBtn: '.refresh-gameBtn',\r\n        shuffleStudentsBtn: '.shuffle-studentsBtn',\r\n        saveGameBtn: '.save-gameBtn', // not yet\r\n        goToClassroomBtn: '.goToClassroomBtn',\r\n        playAgainBtn: '.playAgainBtn',\r\n        playGameBtn: '.playGameBtn',\r\n        previous: '.previous',\r\n        previousStudent: '.previous-student',\r\n        nextStudent: '.next-student',\r\n        next: '.next',   \r\n    };\r\n\r\n    var DOM = {\r\n        classroomData: document.querySelector(DOMStrings.classroomData),\r\n        gameContainer: document.querySelector(DOMStrings.gameContainer),\r\n        teams: document.querySelector(DOMStrings.teams),\r\n        previewTeams: document.querySelector(DOMStrings.previewTeams),\r\n        \r\n        titleContainer: document.querySelector(DOMStrings.titleContainer),\r\n        title: document.querySelector(DOMStrings.title),\r\n        next: document.querySelector(DOMStrings.next),\r\n        nextStudent: document.querySelector(DOMStrings.nextStudent),\r\n        previousStudent: document.querySelector(DOMStrings.previousStudent),\r\n        previous: document.querySelector(DOMStrings.previous),\r\n\r\n    }\r\n\r\n    //persistent data\r\n    let studentsArray = [];\r\n    let backupArray = [];\r\n    \r\n    //HELPER FUNCTIONS\r\n    const shuffleArray = function(array) {\r\n        var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n    // *** for game play\r\n    const addPreviewToDOM_Individual = function () {\r\n        DOM.previewTeams.innerHTML = '';\r\n\r\n        const newTeam = document.createElement('div');\r\n        newTeam.className += 'team';\r\n        let teamList = document.createElement('ul');\r\n        teamList.className += 'teamList';\r\n        studentsArray.forEach(student => {\r\n            let newStudent = document.createElement(\"li\");\r\n            newStudent.className += 'student';\r\n            newStudent.innerHTML = `\r\n                <span class=\"student-name\">${student.name}</span>\r\n                <span class=\"student-gender\">${student.sex === 'male' ? 'boy' : 'girl'}</span>\r\n                <i id=\"${student._id}\" class=\"deleteStudent fas fa-minus\"></i></a>\r\n            `;\r\n            teamList.appendChild(newStudent);\r\n        })\r\n        newTeam.appendChild(teamList);\r\n        DOM.previewTeams.appendChild(newTeam);\r\n    };\r\n\r\n   \r\n    const addIndividualsToDom = function () {\r\n        // add teams to the dom\r\n        \r\n        //create new team div\r\n        const newTeam = document.createElement('div');\r\n        newTeam.className += 'team';\r\n\r\n        let teamList = document.createElement('ul');\r\n        teamList.className += 'teamList';\r\n        studentsArray.forEach((student) => {\r\n            \r\n            let newStudent = document.createElement(\"li\");\r\n            newStudent.className += 'student';\r\n            newStudent.setAttribute('id', student._id);\r\n            newStudent.innerHTML = `\r\n                <span class=name>${student.name}</span>\r\n                <button class=\"minus minus__student\"><i class=\"fas fa-minus\"></i></button>\r\n                <button class=\"add add__student\"><i class=\"fas fa-plus\"></i></button>\r\n                <span class=\"points\">${student.points}</span>\r\n            `;\r\n            teamList.appendChild(newStudent);\r\n        })\r\n        newTeam.appendChild(teamList);\r\n        DOM.teams.appendChild(newTeam);\r\n        \r\n    }\r\n\r\n    const updateStudentsArrayPoints = function(student, action){        \r\n        const studentID = student.id;\r\n\r\n        studentsArray.map(student => {\r\n            \r\n            if (student._id === studentID) {\r\n                // add or minus points from student points\r\n                student.points += action;\r\n            }\r\n        })\r\n    }\r\n\r\n    const shiftStudentsArray = function (array) {\r\n        console.log(\"shift array\");\r\n        array.push(array.shift());\r\n    }\r\n\r\n    const unShiftStudentsArray = function (array) {\r\n        console.log(\"unShift array\");\r\n        array.unshift(array.pop());\r\n        // array.push(studentsArray.pop());\r\n        // console.log('arrayAfter', array)\r\n    }\r\n\r\n    const deleteScoresIndividual = function () {\r\n        studentsArray.forEach(student => {\r\n            student.points = 0;\r\n        })\r\n        console.log(studentsArray);\r\n    }\r\n    \r\n    \r\n    return {\r\n        getDOMStrings: function() {\r\n            return DOMStrings;\r\n        },\r\n        getClassroomData: async function () {\r\n            console.log('get classroom data')\r\n            const classroomID = DOM.classroomData.dataset.classroom_id;\r\n\r\n            const response = await fetch(`/game/classData/${classroomID}`)\r\n            \r\n            const students = await response.json();\r\n\r\n            students.forEach(student => studentsArray.push(student));\r\n\r\n            //shuffle students array for different game play every time\r\n            // studentsArray = shuffleArray(studentsArray);\r\n            backupArray = studentsArray;\r\n            console.log(studentsArray);\r\n        },\r\n\r\n        createPreviewDOM: function () {\r\n            addPreviewToDOM_Individual();\r\n        },\r\n\r\n        \r\n        \r\n        \r\n\r\n        deleteStudent: function (e) {\r\n            console.log(e.target);\r\n            if (e.target.classList.contains('deleteStudent')) {\r\n                console.log('delete student from arrays')\r\n                \r\n                \r\n                studentsArray = CF.removeStudentfromArray(studentsArray, e.target.id)\r\n                \r\n                \r\n                let li = e.target.parentElement;\r\n                li.remove();\r\n            }\r\n        \r\n        },\r\n\r\n        //////////////////////////////////////////////////////////////////\r\n        // *** functions for game play ***\r\n        startGame: function (e) {\r\n            // posting teams to teamGame\r\n            e.preventDefault();\r\n            console.log(\"Classroom Participation\")\r\n\r\n            \r\n            CF.startGame();\r\n            DOM.title.innerHTML = \"Let's Participate\";\r\n            DOM.next.remove();\r\n            DOM.previous.remove();\r\n            DOM.nextStudent.remove();\r\n            DOM.previousStudent.remove();\r\n            console.log(DOM.teams);\r\n\r\n            DOM.teams.classList.remove('hide');\r\n\r\n            shuffleArray(studentsArray);\r\n            \r\n            addIndividualsToDom();\r\n        },\r\n\r\n        changePointStudent: function(e) {\r\n            const target = e.target.parentElement;\r\n            \r\n            if (target.classList.contains('add__student') || target.classList.contains('minus__student')) {\r\n                const action = CF.plusOrMinus(target);\r\n                const student = target.parentElement;\r\n\r\n                CF.updateStudentPointDom(target, action);\r\n\r\n                updateStudentsArrayPoints(student, action);\r\n            }\r\n        },\r\n\r\n        goToNext: function(e) {\r\n            if(e.target.classList.contains('next')) {\r\n                console.log('go to next')\r\n                \r\n                CF.clearDOM();\r\n                shiftStudentsArray(studentsArray);\r\n                addIndividualsToDom();\r\n            }\r\n        },\r\n        goToPrevious: function(e) {\r\n            if(e.target.classList.contains('previous')) {\r\n                CF.clearDOM();\r\n                unShiftStudentsArray(studentsArray);\r\n                addIndividualsToDom();\r\n            }\r\n        },\r\n        refreshScores: function() {\r\n            \r\n            deleteScoresIndividual();\r\n            // shuffleArray(studentsArray);  // not sure best practice....\r\n            CF.clearDOM();\r\n            addIndividualsToDom();\r\n        },\r\n\r\n        refreshStudents: function() {\r\n            \r\n            console.log('refreshStudents');\r\n            studentsArray = backupArray;\r\n            addPreviewToDOM_Individual();\r\n            \r\n        },\r\n        \r\n        \r\n        shufflePreview: function() {\r\n            console.log('shuffle these students around');\r\n            CF.shuffleArray(studentsArray);\r\n\r\n            \r\n            addPreviewToDOM_Individual();\r\n        },\r\n\r\n        saveGame: async function() {\r\n            CF.clearDOM();\r\n            CF.endGameOptions();\r\n\r\n            CF.addWinningStudent(studentsArray);\r\n\r\n            const url = \"/game/updateParticipation\";\r\n             \r\n            await fetch(url, {\r\n                method: 'post',\r\n                \r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                // credentials: 'same-origin',\r\n                body: JSON.stringify(studentsArray),\r\n            }).then(res => res)\r\n            .then(text => console.log('final result', text))\r\n        },\r\n        playAgain: function() {\r\n            window.location.reload(false);\r\n        },\r\n        goToClassroom: function () {\r\n             window.location.href = `/classroom/class/${DOM.classroomData.dataset.classroom_id}`;\r\n        }\r\n    };\r\n})(CF);\r\n\r\nexport{participationUI};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { participationUI as UI } from './UI.js';\r\n\r\nvar controller = (function(UI) {\r\n    var setupEventListeners = function() {\r\n        console.log('setup event listeners')\r\n        var DOMStrings = UI.getDOMStrings();\r\n\r\n\r\n        var DOM = {\r\n            teams: document.querySelector(DOMStrings.teams),\r\n            gameContainer: document.querySelector(DOMStrings.gameContainer),\r\n            previewTeams: document.querySelector(DOMStrings.previewTeams),\r\n            refreshStudentsBtn: document.querySelector(DOMStrings.refreshStudentsBtn),\r\n            shuffleStudentsBtn: document.querySelector(DOMStrings.shuffleStudentsBtn),\r\n            playGameBtn: document.querySelector(DOMStrings.playGameBtn),\r\n            refreshGameBtn: document.querySelector(DOMStrings.refreshGameBtn),\r\n            saveGameBtn: document.querySelector(DOMStrings.saveGameBtn),\r\n            goToClassroomBtn: document.querySelector(DOMStrings.goToClassroomBtn),\r\n            playAgainBtn: document.querySelector(DOMStrings.playAgainBtn),\r\n        };\r\n\r\n        //EVENT LISTENERS\r\n\r\n       \r\n        DOM.previewTeams.addEventListener('click', UI.deleteStudent);\r\n        DOM.teams.addEventListener('click', UI.changePointStudent);\r\n        DOM.gameContainer.addEventListener('click', UI.goToNext);\r\n        DOM.gameContainer.addEventListener('click', UI.goToPrevious);\r\n        DOM.refreshGameBtn.addEventListener('click', UI.refreshScores);\r\n        DOM.refreshStudentsBtn.addEventListener('click', UI.refreshStudents);\r\n        DOM.playGameBtn.addEventListener('click', UI.startGame);\r\n        DOM.shuffleStudentsBtn.addEventListener('click', UI.shufflePreview);\r\n        DOM.saveGameBtn.addEventListener('click', UI.saveGame);\r\n        DOM.goToClassroomBtn.addEventListener('click', UI.goToClassroom);\r\n        DOM.playAgainBtn.addEventListener('click', UI.playAgain);\r\n    }\r\n\r\n    return {\r\n        init: async function () { \r\n            console.log('You can now play an individual game');\r\n            await UI.getClassroomData();\r\n            \r\n            UI.createPreviewDOM();\r\n            setupEventListeners();\r\n\r\n\r\n        }\r\n    }\r\n})(UI);\r\n\r\ncontroller.init();"],"sourceRoot":""}